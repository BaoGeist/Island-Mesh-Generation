@startuml

participant Main

-> Main : main()
activate Main

create configuration
Main -> configuration
activate configuration

create specification
configuration -> specification
activate specification

specification --> configuration
deactivate specification

configuration --> Main
deactivate configuration

create IslandGenerator
Main -> IslandGenerator : create_island()
activate IslandGenerator

create meshExtractor
IslandGenerator -> meshExtractor
activate meshExtractor
meshExtractor --> IslandGenerator
deactivate meshExtractor

create TileTypeWrapperCreator
IslandGenerator -> TileTypeWrapperCreator : create_tile_types()
activate TileTypeWrapperCreator
TileTypeWrapperCreator --> IslandGenerator
deactivate TileTypeWrapperCreator

IslandGenerator -> meshExtractor : extract(Structs.Mesh)
activate meshExtractor
create polygonExtractor
meshExtractor -> polygonExtractor : extract(Structs.Polygon)
activate polygonExtractor
polygonExtractor --> meshExtractor
deactivate polygonExtractor
create segmentExtractor
meshExtractor -> segmentExtractor : extract(Structs.Segment)
activate segmentExtractor
segmentExtractor --> meshExtractor
deactivate segmentExtractor
create vertexExtractor
meshExtractor -> vertexExtractor : extract(Structs.Vertex)
activate vertexExtractor
vertexExtractor --> meshExtractor
deactivate vertexExtractor
meshExtractor --> IslandGenerator
deactivate meshExtractor

create RandomSeed
IslandGenerator -> RandomSeed : set_randomseed(IslandSpecifications)
activate RandomSeed
RandomSeed --> IslandGenerator
deactivate RandomSeed

create islandGeographySetter
IslandGenerator -> islandGeographySetter : set_island_type(GeometryContainer, IslandSpecifications)
activate islandGeographySetter
islandGeographySetter --> IslandGenerator
deactivate islandGeographySetter
IslandGenerator -> islandGeographySetter : set_island_elevation(GeometryContainer, IslandSpecifications)
activate islandGeographySetter
islandGeographySetter --> IslandGenerator
deactivate islandGeographySetter

create lakeGenerator
IslandGenerator -> lakeGenerator : generate(GeometryContainer)
activate lakeGenerator
lakeGenerator --> IslandGenerator
deactivate lakeGenerator

create riverGenerator
IslandGenerator -> riverGenerator : generate(GeometryContainer)
activate riverGenerator
riverGenerator --> IslandGenerator
deactivate riverGenerator

create aquiferGenerator
IslandGenerator -> aquiferGenerator : generate(GeometryContainer)
activate aquiferGenerator
aquiferGenerator --> IslandGenerator
deactivate aquiferGenerator

create moistureSetter
IslandGenerator -> moistureSetter : calculateMoisture(GeometryContainer)
activate moistureSetter
create moistureFactory
moistureSetter -> moistureFactory: selectMoistureProfile(IslandSpecifications)
moistureFactory --> moistureSetter
deactivate moistureFactory
moistureSetter --> IslandGenerator
deactivate moistureSetter

create biomeSetter
IslandGenerator -> biomeSetter : setMultipleBiomes(GeometryContainer)
activate biomeSetter
create biomeFactory
biomeSetter -> biomeFactory: selectBiomeProfile(IslandSpecifications)
biomeFactory --> biomeSetter
deactivate biomeFactory
biomeSetter --> IslandGenerator
deactivate biomeSetter

create meshExporter
IslandGenerator -> meshExporter : export(GeometryContainer)
activate meshExporter
create colourFactory
meshExporter -> colourFactory : create(IslandSpecifications)
activate colourFactory
colourFactory --> meshExporter
deactivate colourFactory
create polygonExporter
meshExporter -> polygonExporter : export(PolygonWrapper)
activate polygonExporter
polygonExporter -> colourExporter : export (PolygonWrapper)
activate colourExporter
colourExporter --> polygonExporter
deactivate colourExporter
polygonExporter --> meshExporter
deactivate polygonExporter
create segmentExporter
meshExporter -> segmentExporter : export (SegmentWrapper)
activate segmentExporter
segmentExporter --> meshExporter
deactivate segmentExporter
create vertexExporter
meshExporter -> vertexExporter : export (VertexWrapper)
activate vertexExporter
vertexExporter --> meshExporter
deactivate vertexExporter
meshExporter --> IslandGenerator
deactivate meshExporter

IslandGenerator --> Main

@enduml
