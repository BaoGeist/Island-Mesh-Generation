@startuml

class Main

interface MeshGenerator {
    +Mesh generator()
}
MeshGenerator <|-- OurIrregular: _'is a'

class OurIrregular {
    -int width
    -int height
    -int num_polygons
    -ArrayList<Vertex> unique_vertices
    -ArrayList<Segment> unique_segments
    -ArrayList<Polygon> polygons
    +Mesh generate()
}
Main -- OurIrregular

interface OurGeometryFactory {
    +ArrayList<Object> create_geometry;
}

together{
    class OurPolygon {
        -Vertex centroid
        -ArrayList<Segment> segments_group
        -ArrayList<Integer> neighbours_id
        -String colorCode
        -float alpha
        -int id
        +ArrayList<Object> create_geometry()
        -Vertex create_middle_vertex()
    }
    OurGeometryFactory <|-- OurPolygon: _'is a'
    OurIrregular "1" o-- "0..*" OurPolygon: _'has a'


    Class OurSegment {
        -int[] colour_code
        -Vertex head_vertex
        -Vertex tail_vertex
        +ArrayList<Object> create_geometry(Vertex vertex1,Vertex vertex2,
         float alpha_entry, int thickness_entry, int IDself)
    }
    OurGeometryFactory <|-- OurSegment: _'is a'
    OurIrregular "1" o-- "0..*" OurSegment: _'has a'
    OurPolygon "1" o-- "3..*" OurSegment: _'has a'
    OurPolygon "1" o-- "1" OurVertex: _'has a'

    class OurVertex {
        -double[] coords
        -String colorCode
        -int id
        +Vertex create_geometry(double x, double y, int id)
        +Vertex create_geometry_centroid(double x, double y, intd)
    }
    OurGeometryFactory <|-- OurVertex: _'is a'
    OurSegment "1" o-- "2" OurVertex: _'has a'
    OurIrregular "1" o-- "0..*" OurVertex: _'has a'
}



@enduml