@startuml

class Main

interface MeshGenerator {
    +Mesh generator()
}
MeshGenerator <|-- OurIrregular: _'is a'

class OurIrregular {
    -int width
    -int height
    -int num_polygons
    -ArrayList<Vertex> vertices
    -ArrayList<Polygon> polygons
    +Mesh generate()
    -ArrayList<Segment> segments
}
Main -- OurIrregular

interface OurGeometryFactory {
    +ArrayList<Object> create_geometry;
}
OurIrregular "1" ..> "1..*" OurGeometryFactory

class OurPolygon {
    -Vertex middle_vertex
    -ArrayList<Segment> segments_group
    -ArrayList<Integer> segments_id
    -ArrayList<Integer> neighbours_id
    -ArrayList<Double> x_coords
    -ArrayList<Double> y_coords
    -int thickness
    -String colorCode
    -float alpha
    -int id
    +ArrayList<Object> create_geometry()
    -void set_color()
    -void set_coords()
    -Vertex create_middle_vertex()
    -String get_neighbours_id()
    -Polygon build_polygon()
}
OurGeometryFactory <|-- OurPolygon: _'is a'

together{
    Class OurSegment {
        -int[] colour_code
        -double[] head_coord
        -double[] tail_coord
        -double[] middle_coord
        -Vertex head_vertex
        -Vertex tail_vertex
        -Segment actual_segment
        -int thickness
        -float alpha
        -int id
        +Segment create_segment(Vertex vertex1,Vertex vertex2,
         float alpha_entry, int thickness_entry, int IDself)
        -double[] get_coords(Vertex v)
        -Vertex get_head_vertex()
        -Vertex get_tail_vertex()
        -void set_segment_colour()
        -void set_segment_middle()
        -Segment build_segment()
    }
    OurGeometryFactory <|-- OurSegment: _'is a'
    OurPolygon "1" o-- "3..*" OurSegment: _'has a'
    OurPolygon "1" o-- "1" OurVertex: _'has a'

    class OurVertex {
        -double[] coords
        -int[] colorCodes
        -String colorCode
        -int id
        -void set_coords(double x_coord, double y_coord)
        -double[] get_coords()
        -void set_color()
        +String get_color_string()
        +int[] get_color_array()
        +Vertex makeVertex(double x, double y, int id)
        +Vertex makeCentroidVertex(double x, double y, intd)
        -Vertex build_vertex()
    }
    OurGeometryFactory <|-- OurVertex: _'is a'
    OurSegment "1" o-- "2" OurVertex: _'has a'
}



@enduml