package islandADT.Shapes;


import org.locationtech.jts.geom.*;
import org.locationtech.jts.geom.LinearRing;
import org.locationtech.jts.geom.Polygon;


public class UkraineShape implements Shape{

    private Polygon Urkaine;
    @Override
    public Geometry generateIsland(int radius) {
        GeometryFactory factory = new GeometryFactory();
        String string = "[38.2166, 47.1033],[37.5807, 47.0904],[37.3352, 46.8825],[37.2082, 46.9336],[36.8862, 46.804],[36.1895, 46.669],[35.9016, 46.6527],[35.5105, 46.4572],[35.2914, 46.2934],[35.075, 46.2711],[34.8113, 46.1662],[34.8744, 45.9261],[35.0444, 45.6701],[35.3322, 45.3712],[35.4807, 45.2978],[35.7918, 45.4123],[36.0223, 45.3681],[36.3, 45.4733],[36.6135, 45.4089],[36.418, 45.2299],[36.4401, 45.0675],[36.2246, 45.0075],[36.0479, 45.0488],[35.848, 44.9924],[35.5474, 45.1197],[35.3894, 45.0019],[35.0057, 44.8352],[34.757, 44.8205],[34.469, 44.7298],[34.3412, 44.5585],[33.9579, 44.383],[33.721, 44.3996],[33.4774, 44.6066],[33.6196, 44.9315],[33.5625, 45.0939],[33.4134, 45.1845],[33.2596, 45.1561],[32.8993, 45.3542],[32.5129, 45.3406],[32.5252, 45.4582],[32.9368, 45.6625],[33.7087, 45.9097],[33.6135, 46.1452],[33.4238, 46.0533],[33.2935, 46.1357],[32.7898, 46.1343],[32.5034, 46.0761],[32.2625, 46.1282],[31.9683, 46.3511],[32.1117, 46.5124],[31.8584, 46.6291],[31.481, 46.6464],[31.3377, 46.6013],[30.9914, 46.6013],[30.7549, 46.5159],[30.7725, 46.3964],[30.4942, 46.0805],[30.1384, 45.8198],[29.9685, 45.8389],[29.865, 45.6723],[29.5897, 45.5591],[29.7474, 45.4634],[29.659, 45.2159],[29.6503, 45.3461],[29.3221, 45.4438],[28.7101, 45.227],[28.3302, 45.3229],[28.1995, 45.4618],[28.4809, 45.502],[28.474, 45.6579],[28.7383, 45.8376],[28.7576, 45.9612],[28.932, 45.9932],[29.0154, 46.1826],[28.9335, 46.259],[28.9458, 46.4548],[29.1627, 46.5381],[29.2007, 46.3571],[29.7269, 46.4558],[29.8478, 46.3415],[30.0811, 46.3742],[29.9161, 46.5188],[29.9526, 46.7247],[29.8436, 46.8541],[29.5587, 46.9457],[29.5566, 47.324],[29.3589, 47.3527],[29.1174, 47.5333],[29.2386, 47.756],[29.124, 47.976],[28.9504, 47.9348],[28.7993, 48.1118],[28.1999, 48.2117],[27.7518, 48.452],[27.5038, 48.4724],[27.1758, 48.3618],[26.8428, 48.3937],[26.6179, 48.259],[26.3035, 48.212],[26.1731, 47.9931],[25.2617, 47.8986],[25.1219, 47.7703],[24.8966, 47.7101],[24.5616, 47.9405],[24.231, 47.897],[23.9773, 47.9623],[23.3601, 47.9931],[23.2314, 48.0797],[22.8776, 47.9467],[22.831, 48.0724],[22.6001, 48.1011],[22.3571, 48.2431],[22.2718, 48.4035],[22.1328, 48.4048],[22.1537, 48.5859],[22.3225, 48.7003],[22.5396, 49.0722],[22.7445, 49.0455],[22.7242, 49.3671],[22.6409, 49.5288],[23.1015, 49.9571],[23.7475, 50.3894],[23.9813, 50.4048],[24.1065, 50.5386],[23.8747, 51.1361],[23.634, 51.3393],[23.6062, 51.5174],[23.7497, 51.6445],[23.9813, 51.586],[24.2441, 51.7182],[24.3908, 51.88],[24.7218, 51.8823],[25.1833, 51.9498],[25.7679, 51.9285],[26.4078, 51.8506],[26.8548, 51.7493],[27.1779, 51.7471],[27.254, 51.5954],[27.4773, 51.6237],[28.3469, 51.5252],[28.7999, 51.5326],[29.1604, 51.6033],[29.297, 51.3737],[29.618, 51.4856],[29.8286, 51.43],[30.1486, 51.4844],[30.3551, 51.3053],[30.6383, 51.3359],[30.5341, 51.5533],[30.662, 51.8194],[30.9405, 52.0201],[31.4749, 52.1178],[31.7643, 52.1006],[32.0956, 52.0407],[32.3067, 52.1412],[32.3395, 52.2872],[32.5284, 52.3162],[32.9269, 52.2469],[33.1965, 52.3689],[33.8041, 52.3546],[34.0557, 52.1703],[34.0682, 52.031],[34.3857, 51.8177],[34.3763, 51.7086],[34.128, 51.6807],[34.2803, 51.3613],[34.409, 51.2531],[34.7481, 51.1647],[34.9618, 51.2153],[35.3417, 50.9159],[35.4454, 50.6875],[35.4253, 50.5005],[35.6969, 50.3451],[35.8374, 50.4232],[36.1058, 50.4211],[36.269, 50.2814],[36.6826, 50.2607],[36.9141, 50.3391],[37.4353, 50.4249],[37.5992, 50.2909],[37.7277, 50.0787],[37.9953, 49.9213],[38.3442, 49.9921],[38.8522, 49.8658],[39.1828, 49.8585],[39.238, 49.7651],[39.5704, 49.7133],[39.8015, 49.5422],[40.0409, 49.4555],[40.1417, 49.2458],[39.9187, 49.0478],[39.6811, 49.0203],[39.7587, 48.8954],[39.6317, 48.5869],[39.8092, 48.5838],[39.9932, 48.2732],[39.8431, 48.1198],[39.7591, 47.8329],[39.3916, 47.8226],[38.8772, 47.8612],[38.7345, 47.6771],[38.3529, 47.6071],[38.201, 47.2906],[38.2166, 47.1033]";
        String[] string_array = string.split("],");
        double[] x_coords = new double[string_array.length];
        double[] y_coords = new double[string_array.length];
        Coordinate[] vertices = new Coordinate[string_array.length];
        double x_min = Integer.MAX_VALUE, x_max = Integer.MIN_VALUE;
        double y_min = Integer.MAX_VALUE, y_max = Integer.MIN_VALUE;
        double min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;
        for(int i = 0; i < vertices.length; i++) {
            String item = string_array[i];
            String string_mid = item.replace("[", "");
            string_mid = string_mid.replace("]", "");
            string_mid = string_mid.replace(" ", "");
            String[] split = string_mid.split((","));

            x_coords[i] = Double.parseDouble(split[0]);
            y_coords[i] = Double.parseDouble(split[1]);

            x_max = Math.max(x_coords[i], x_max);
            x_min = Math.min(x_coords[i], x_min);
            x_max = Math.max(y_coords[i], x_max);
            x_min = Math.min(y_coords[i], x_min);
        }
        max = Math.max(x_max, y_max);

        double x_increment = 500 / (max - min);


        for(int i = 0; i < x_coords.length;i++) {
            Double new_x = (x_coords[i] - x_min) * x_increment;
            Double new_y = 800-(y_coords[i] - x_min) * x_increment;
            vertices[i] = new Coordinate(new_x, new_y);
            System.out.println("" + new_x + " " + new_y);
        }

        LinearRing shell = factory.createLinearRing(vertices);
        Urkaine = factory.createPolygon(shell, null);
        return Urkaine;
    }
}
